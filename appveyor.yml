version: 2.0.0.{build}
environment:
  stage: alpha
  release_notes: 'Stunning New.'
  solution_path: src\Analyzer1.sln
  test_dll_dir: src\Analyzer1\Analyzer1.Test\bin\Release
pull_requests:
  do_not_increment_build_number: true
os: Visual Studio 2015
configuration: Release
platform: Any CPU
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: '{version}'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}'
before_build:
- ps: . .\before_build.ps1
build:
  project: $(solution_path)
  verbosity: minimal
after_build:
- ps: >-
    $folder = $env:APPVEYOR_BUILD_FOLDER + "\" + ($env:solution_path -split "\.")[0]

    (Get-ChildItem $folder -Recurse).Where{ $_.Extension -eq ".nupkg"} | %{ Push-AppveyorArtifact $_.FullName -FileName $_.Name }
test_script:
- ps: >-
    $opencover = (Resolve-Path "src/packages/OpenCover.*/tools/OpenCover.Console.exe").ToString()

    $runner = (Resolve-Path "src\packages\xunit.runner.console.*\tools\xunit.console.x86.exe").ToString()

    $targetargs = """Analyzer1.Test.dll"" -noshadow -appveyor"

    $filter = "+[Analyzer1*]* -[Analyzer1.Test*]*"


    & $opencover -register:user -target:$runner "-targetargs:$targetargs" -targetdir:$env:test_dll_dir "-filter:$filter" -returntargetcode -hideskipped:All -output:opencoverCoverage.xml


    $env:Path = "C:\Python34;C:\Python34\Scripts;$env:Path"

    python -m pip install --upgrade pip

    pip install codecov

    &{codecov -f "opencoverCoverage.xml"}


deploy:
- provider: GitHub
  tag: $(nupkg_version)
  release: $(nupkg_version)
  description: $(release_notes)
  auth_token:
    secure: ld1RBkNTi/7LQRJhZJXjATWL/TdysxJRPcTjyKVvsnLumE7ulNyIUy40eASxX4bv
  prerelease: $(is_prerelease)
  on:
    branch: master